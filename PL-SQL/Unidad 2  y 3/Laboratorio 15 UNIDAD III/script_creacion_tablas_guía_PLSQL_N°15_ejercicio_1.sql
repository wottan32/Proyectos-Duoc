CREATE TABLE VENDEDOR
(id_vendedor     NUMBER(10) CONSTRAINT PK_VENDEDOR PRIMARY KEY,
 pnombre         VARCHAR2(20) NOT NULL,
 snombre         VARCHAR2(20),
 appaterno       VARCHAR2(20) NOT NULL,
 apmaterno       VARCHAR2(20) NOT NULL,
 fecha_contrato  DATE NOT NULL,
 sueldo_base     NUMBER(8) NOT NULL);
 
CREATE TABLE PRODUCTO 
(cod_producto NUMBER (5) CONSTRAINT PK_PRODUCTO PRIMARY KEY, 
 desc_producto VARCHAR2 (30)  NOT NULL);

CREATE TABLE STOCK 
(cod_producto NUMBER (5)  CONSTRAINT PK_STOCK PRIMARY KEY, 
 stock_minimo NUMBER (5)  NOT NULL , 
 stock_actual NUMBER (5)  NOT NULL,
 CONSTRAINT FK_STOCK_PRODUCTO FOREIGN KEY(cod_producto) REFERENCES PRODUCTO (cod_producto));

CREATE TABLE BOLETA 
(nro_boleta NUMBER (10) CONSTRAINT PK_BOLETA PRIMARY KEY, 
 fecha_boleta DATE  NOT NULL , 
 monto_boleta NUMBER (10)  NOT NULL , 
 id_vendedor NUMBER (10)  NOT NULL,
 CONSTRAINT FK_BOLETA_VENDEDOR FOREIGN KEY(id_vendedor) REFERENCES VENDEDOR(id_vendedor));

CREATE TABLE DETALLE_BOLETA 
(nro_boleta NUMBER (10)  NOT NULL , 
 cod_producto NUMBER (5)  NOT NULL , 
 cantidad NUMBER  NOT NULL , 
 valor_unitario NUMBER (5)  NOT NULL , 
 valor_total NUMBER (8)  NOT NULL,
 CONSTRAINT PK_DETALLE_BOLETA PRIMARY KEY ( cod_producto, nro_boleta ),
 CONSTRAINT FK_DETALLE_BOLETA_BOLETA FOREIGN KEY(nro_boleta) REFERENCES BOLETA (nro_boleta),
 CONSTRAINT FK_DETALLE_BOLETA_PRODUCTO FOREIGN KEY(cod_producto) REFERENCES PRODUCTO (cod_producto));

CREATE TABLE COMISIONES_DIARIAS_VENDEDOR
(id_vendedor  NUMBER(10) NOT NULL,
 fecha_venta  DATE NOT NULL,
 monto_total_comision  NUMBER(10) NOT NULL,
 CONSTRAINT PK_COMISIONES_DIARIAS_VENDEDOR PRIMARY KEY(id_vendedor, fecha_venta),
 CONSTRAINT FK_COMISIONES_DIARIAS_VENDEDOR FOREIGN KEY(id_vendedor) REFERENCES VENDEDOR(id_vendedor));

CREATE TABLE VENTAS_DIARIAS_VENDEDOR
(id_vendedor  NUMBER(10) NOT NULL,
 fecha_venta  DATE NOT NULL,
 total_ventas  NUMBER(10) NOT NULL,
 monto_total_ventas  NUMBER(10) NOT NULL,
 CONSTRAINT PK_VENTAS_DIARIAS_VENDEDOR PRIMARY KEY(id_vendedor, fecha_venta),
 CONSTRAINT FK_VENTAS_DIARIAS_VENDEDOR FOREIGN KEY(id_vendedor) REFERENCES VENDEDOR(id_vendedor));

CREATE TABLE RESUMEN_VENTAS_DIARIAS
(fecha_venta  DATE NOT NULL,
 total_ventas  NUMBER(10) NOT NULL,
 monto_total_ventas  NUMBER(10) NOT NULL,
 CONSTRAINT PK_RESUMEN_VENTAS_DIARIAS PRIMARY KEY(fecha_venta));


CREATE TABLE HABERES_CALCULADOS 
(id_vendedor  NUMBER(10)  NOT NULL , 
 mes_proceso  NUMBER(2)  NOT NULL , 
 anno_proceso NUMBER(4) NOT NULL , 
 valor_comision NUMBER(8) NOT NULL,
 valor_bono_antiguedad   NUMBER(8) NOT NULL,
 valor_total_haberes     NUMBER(10) NOT NULL,
CONSTRAINT PK_HABERES_CALCULADOS PRIMARY KEY (id_vendedor, mes_proceso, anno_proceso),
CONSTRAINT FK_HABERES_CALCULADOS_VENDEDOR FOREIGN KEY(id_vendedor) REFERENCES VENDEDOR(id_vendedor));

 
INSERT INTO VENDEDOR VALUES(1111111, 'JUAN',NULL,'PÉREZ','SOTO','01/05/2005', 230000);
INSERT INTO VENDEDOR VALUES(2222222, 'EUGENIA','LORENA','JARAMILLO','LÓPEZ','20/03/2010',210000);
INSERT INTO VENDEDOR VALUES(3333333, 'CARLOS','ALBERTO','ARAVENA','SUAZO','15/01/2014',180000);
 
INSERT INTO PRODUCTO VALUES(1000, 'CAFE EN GRANO NESCAFÉ');
INSERT INTO PRODUCTO VALUES(2000, 'ACEITE DE MARAVILLA CHEF');
INSERT INTO PRODUCTO VALUES(2001, 'ACEITE VEGETAL MIRAFLORES');
INSERT INTO PRODUCTO VALUES(3000, 'ARROZ BANQUETE PREMIUM GRADO 1');

INSERT INTO STOCK VALUES(1000, 100, 200);
INSERT INTO STOCK VALUES(2000, 150, 300);
INSERT INTO STOCK VALUES(2001, 150, 150);
INSERT INTO STOCK VALUES(3000, 50, 20);


INSERT INTO BOLETA VALUES(97, '27/04/2014', 105000, 1111111);
INSERT INTO BOLETA VALUES(98, '28/04/2014', 134500, 3333333);
INSERT INTO BOLETA VALUES(99, '29/04/2014', 30000, 2222222);
INSERT INTO BOLETA VALUES(100, '01/05/2014', 89760, 1111111);
INSERT INTO BOLETA VALUES(101, '05/05/2014', 104000, 2222222);
INSERT INTO BOLETA VALUES(102, '05/05/2014', 80760, 2222222);
INSERT INTO BOLETA VALUES(103, '29/05/2014', 134500, 1111111);
INSERT INTO BOLETA VALUES(104, '29/05/2014', 65000, 2222222);

INSERT INTO DETALLE_BOLETA VALUES(97, 1000, 30, 3500, 105000);
INSERT INTO DETALLE_BOLETA VALUES(98, 1000, 12, 3500, 42000);
INSERT INTO DETALLE_BOLETA VALUES(98, 3000, 50, 1850, 92500);
INSERT INTO DETALLE_BOLETA VALUES(99, 2000, 20, 1500, 30000);
INSERT INTO DETALLE_BOLETA VALUES(100, 1000, 12, 1230, 14760);
INSERT INTO DETALLE_BOLETA VALUES(100, 2000, 20, 1500, 30000);
INSERT INTO DETALLE_BOLETA VALUES(100, 3000, 25, 1800, 45000);
INSERT INTO DETALLE_BOLETA VALUES(101, 2001, 80, 1300, 104000);
INSERT INTO DETALLE_BOLETA VALUES(102, 1000, 12, 1230, 14760);
INSERT INTO DETALLE_BOLETA VALUES(102, 2000, 20, 1500, 30000);
INSERT INTO DETALLE_BOLETA VALUES(102, 3000, 20, 1800, 36000);
INSERT INTO DETALLE_BOLETA VALUES(103, 1000, 12, 3500, 42000);
INSERT INTO DETALLE_BOLETA VALUES(103, 3000, 50, 1850, 92500);
INSERT INTO DETALLE_BOLETA VALUES(104, 2001, 50, 1300, 65000);
COMMIT;

/*1*/

/*a*/
La Gerencia desea que se puedan controlar las transacciones que se efectúan sobre la tabla
DETALLE_BOLETA. Para ello, Ud. deberá implementar la solución a través de un trigger
que permita asegurar que sólo se puede eliminar o actualizar una fila de esta tabla de
lunes a miércoles en cualquier horario. Si alguien inserta o actualiza datos jueves o viernes
se debe ejecutar una excepción con el código de error -20500 y el mensaje 'Solo se pueden
ingresar o actualizar datos en horario de trabajo'.

CREATE OR REPLACE TRIGGER verfHorarioTrabajo
	BEFORE INSERT OR UPDATE ON DETALLE_BOLETA
	FOR EACH ROW
  DECLARE
	v_dia VARCHAR2(100);
	ex EXCEPTION;

	
	BEGIN
  SELECT LOWER(TO_CHAR(SYSDATE, 'DAY')) INTO v_dia FROM DUAL;
	 if v_dia ='jueves' OR v_dia ='viernes' THEN
	 	RAISE ex;
  END IF;

	EXCEPTION
		WHEN ex THEN
			DBMS_OUTPUT.PUT_LINE('Solo se pueden ingresar o actualizar datos en horario de trabajo');

	END;


	/*b*/


  CREATE SEQUENCE seq_auditoria
    minvalue 1
    Start with 1
    increment by 1;


    CREATE TABLE REG_AUDITORIA(
    	id NUMBER(5) PRIMARY KEY,
    	user_modif VARCHAR2(20) NOT NULL,
    	fecha_modif DATE NOT NULL,
    	tipo_modif NUMBER(1) NOT NULL
    	);

CREATE OR REPLACE TRIGGER Trgger_Reg_auditoria
	AFTER UPDATE OR INSERT OR DELETE ON PRODUCTO
	FOR EACH ROW

	DECLARE
		parm_user_ID varchar2(200);
		v_tipo NUMBER(1);

	BEGIN

		select USER into parm_user_ID from dual;

		IF INSERTING THEN
			v_tipo :=1;

		ELSIF UPDATING THEN
			v_tipo :=2;

		ELSIF DELETING THEN
			v_tipo :=3;

		END IF;


		INSERT INTO REG_AUDITORIA VALUES(seq_auditoria.nextval,parm_user_ID, SYSDATE, v_tipo );
END;
INSERT INTO PRODUCTO VALUES(9999, 'Té Aromático');